public class LinkedList{
    private Node head;
    private Node tail;
    private Integer size = 0;

    public LinkedList {
        head = null;
        tail = null;
        size = 0;
    }
    
    public void addToFront(Integer value){
        Node newNode = new Node(value);

        if(head == null){
            head = newNode;
            tail = newNode;
        }
        else {
            newNode.next = head;
            head = newNode;
        }

        size++;
    }

    public Integer removeFromFront(){
        if(head == null){
            return null;
        }
        
        Integer removed = head.data;
        head = head.next;

        if(head == null){
            tail = null;
        }

        return removed;
    }

    public void addToTail(Integer value){
        Node newNode = new Node(value);

        if(tail == null){
            head = newNode;
            tail = newNode;
        } 
        else {
            tail.next = newNode;
            tail = newNode;
        }

        size++;
    }

    public Integer removeFromTail(){
        if(tail == null){
            return null;
        }

        if(head == tail){
            Integer removed = head.data;
            head = null;
            tail = null;
            size--;

            return removed;
        }

        Node current = head;
        
        while(current.next != tail){
            current = current.next;
        }

        Integer removed = tail.data;
        tail = current;
        tail.next = null;
        size--;

        return removed;
    }

    public Integer size(){
        return size;
    }
}

public class Node{
    Integer data;
    Node next;

    public Node(Integer data){
        this.data = data;
        this.next = null;
    }
}